// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	io "io"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	resty "github.com/go-resty/resty/v2"
)

// HttpClient is an autogenerated mock type for the httpClient type
type HttpClient struct {
	mock.Mock
}

// Download provides a mock function with given fields: filepath, url
func (_m *HttpClient) Download(filepath string, url string) error {
	ret := _m.Called(filepath, url)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(filepath, url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Downloader provides a mock function with given fields: w, url
func (_m *HttpClient) Downloader(w io.Writer, url string) error {
	ret := _m.Called(w, url)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer, string) error); ok {
		r0 = rf(w, url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetClient provides a mock function with given fields:
func (_m *HttpClient) GetClient() *http.Client {
	ret := _m.Called()

	var r0 *http.Client
	if rf, ok := ret.Get(0).(func() *http.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Client)
		}
	}

	return r0
}

// R provides a mock function with given fields:
func (_m *HttpClient) R() *resty.Request {
	ret := _m.Called()

	var r0 *resty.Request
	if rf, ok := ret.Get(0).(func() *resty.Request); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resty.Request)
		}
	}

	return r0
}
